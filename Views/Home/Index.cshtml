@model PaginatedList<MvcNewsFlash.Models.News>

@{
    ViewData["Title"] = "Home Page";
}

<main class="home-page">
    <div class="home-in">
        <div class="container">
            <div class="row">
                <div class="col-lg-12" ;>
                    @foreach (var item in Model)
                    {
                        <div class="news-block">
                            <div>
                                <img class="img-wrap" src="@("~/Images/" + item.ImagePath)" asp-append-version="true" />
                            </div>
                            <div class="news-block-right">
                                <div class="title">
                                    <h4 class="h4"> @Html.DisplayFor(modelItem => item.Title) </h4>
                                    <div class="news-excerpt">
                                        <p>@Html.DisplayFor(modelItem => item.ReleaseDate) <br />@Html.DisplayFor(modelItem => item.Description)</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>